timeout: 780s
steps:
  - id: make test
    name: golang:1.15.1
    dir: .
    args: [ 'make', 'test' ]

  - id: build and push grpc-gateway image
    name: gcr.io/kaniko-project/executor:latest
    args:
      - --destination=gcr.io/$PROJECT_ID/grpc-gateway:${COMMIT_SHA}
      - --cache=true
      - --cache-ttl=6h
      - --dockerfile=Dockerfile.proxy
      - --build-arg=PROJECT_ID=${PROJECT_ID}
    waitFor: ['make test']

  - id: build and push grpc-server image
    name: gcr.io/kaniko-project/executor:latest
    args:
      - --destination=gcr.io/$PROJECT_ID/grpc-server:${COMMIT_SHA}
      - --cache=true
      - --cache-ttl=6h
      - --dockerfile=Dockerfile.server
      - --build-arg=PROJECT_ID=${PROJECT_ID}
    waitFor: ['make test']

  # Access the id_github file from Secret Manager`
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', 'gcloud secrets versions access latest --secret=github-secret > /root/.ssh/id_github' ]
    volumes:
      - name: 'ssh'
        path: /root/.ssh

  # Set up git with key and domain
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod 600 /root/.ssh/id_github
        cat <<EOF >/root/.ssh/config
        Hostname github.com
        IdentityFile /root/.ssh/id_github
        EOF
        ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
      - name: 'ssh'
        path: /root/.ssh

  # Connect to the repository
  - name: 'gcr.io/cloud-builders/git'
    args:
      - clone
      - --recurse-submodules
      - git@github.com:istsh/go-grpc-health-probe-sample-manifests.git
    volumes:
      - name: 'ssh'
        path: /root/.ssh

  # This step generates the new manifest
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Generate manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        cd go-grpc-health-probe-sample-manifests && \
        sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
        sed "s/COMMIT_SHA/${SHORT_SHA}/g" > kubernetes.yaml

  # This step pushes the manifest back to repository
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Push manifest
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        cd go-grpc-health-probe-sample-manifests && \
        git config user.email github3104xniiapm@gmail.com && \
        git fetch origin candidate-dev && git switch candidate-dev && \
        git add kubernetes.yaml && \
        git commit -m "Deploying images
        - gcr.io/${PROJECT_ID}/grpc-gateway:${SHORT_SHA}
        - gcr.io/${PROJECT_ID}/grpc-server:${SHORT_SHA}

        Built from commit ${COMMIT_SHA} of repository go-grpc-health-probe-sample-manifest
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
        git push origin candidate-dev

#このファイルで、
#- manifestsリポジトリをクローン
#- grpc-gatewayとgrpc-serverのdeployment.yamlのCOMMIT_SHAを更新
#- candidateブランチにプッシュする
#ステップを書く
#manifestsリポジトリのcandidateブランチにプッシュされると、デプロイが開始される